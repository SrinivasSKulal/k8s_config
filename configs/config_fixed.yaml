apiVersion: v1
kind: Namespace
metadata:
  name: nginx-namespace
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: nginx-namespace
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log	/var/log/nginx/access.log main;
      server {
          listen       80;
          server_name  _;
          location / {
              root   html;
              index  index.html index.htm;
          }
      }
      include /etc/nginx/virtualhost/virtualhost.conf;
    }
  virtualhost.conf: |
    upstream app {
      server localhost:8080;
      keepalive 1024;
    }
    server {
      listen 80 default_server;
      root /usr/local/app;
      access_log /var/log/nginx/app.access.log main;
      error_log /var/log/nginx/app.error_log;
      location / {
        proxy_pass http://app/;
        proxy_http_version 1.1;
      }
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-serviceaccount
  namespace: nginx-namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nginx-role
  namespace: nginx-namespace
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-rolebinding
  namespace: nginx-namespace
subjects:
- kind: ServiceAccount
  name: nginx-serviceaccount
  namespace: nginx-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nginx-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: nginx-serviceaccount
      containers:
      - name: nginx
        image: nginx:1.25.5
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "250m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx
          readOnly: true
        - name: log
          mountPath: /var/log/nginx
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
          - key: nginx.conf
            path: nginx.conf
          - key: virtualhost.conf
            path: virtualhost/virtualhost.conf
      - name: log
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nginx-namespace
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx